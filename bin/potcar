#! /usr/bin/env ruby
# coding: utf-8

require "thor"
require "vasputils"

class PotcarCommand < Thor

  desc 'generate [options] elem1 [elem2, ...]', 'generate POTCAR of elements'
  option :poscar, desc: 'Alternatively use of elements in POSCAR',
    lazy_default: "POSCAR"
  def generate(*elements)
    if options[:poscar] && (! elements.empty?)
      puts "Error. Duplicated indication of elements with argument and --poscar option."
      exit
    end

    if options[:poscar]
      elements = VaspUtils::Poscar.load_file(options[:poscar]).elements
    end

    setting = VaspUtils::Setting.new

    vpc = VaspUtils::Potcar::Concatenater.new(
      setting['potcar_dir'],
      setting['default_potcar']
    )
    vpc.dump(elements, STDOUT)
  end

  desc 'show', 'show infomation of POTCAR'
  option :potcar, desc: 'indicate POTCAR file', default: 'POTCAR'
  def show
    potcar = VaspUtils::Potcar.load_file(options[:potcar])
    printf("%7s %7s %4s\n", "element", "ENMAX", "ZVAL")
    potcar.elements.size.times do |i|
      printf("%7s %7.3f %4.1f\n", 
             potcar.elements[i],
             potcar.enmaxes[i],
             potcar.zvals[i]
            )
    end
  end
end

PotcarCommand.start(ARGV)
